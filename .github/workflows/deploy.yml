name: CD

on:
  workflow_dispatch:
  push:
    branches:
      - 'main'
      - 'develop'
      - 'deploy'
    tags:
      - 'v*'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  docker:
    name: Docker
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          
  deploy:
    name: Deploy
    needs: docker
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Upload repo
      uses: appleboy/scp-action@v0.1.4
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        password: ${{ secrets.PASSWORD }}
        port: ${{ secrets.PORT }}
        source: "*"
        target: "~"
    - name: (Re)Generate certificates
      uses: appleboy/ssh-action@v1.0.0
      env:
        DOMAIN: ${{ secrets.HOST }}
        MAIL: ${{ secrets.MAIL }}
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        password: ${{ secrets.PASSWORD }}
        port: ${{ secrets.PORT }}
        envs: DOMAIN,MAIL
        script: |
          docker compose --file docker-compose/deploy/gen-certs.yml up --abort-on-container-exit
          
    - name: Rerun server
      uses: appleboy/ssh-action@v1.0.0
      env:
        DOMAIN: ${{ secrets.HOST }}
        SENDER_API_KEY: ${{ secrets.SENDER_API_KEY }}
        FRONT_TAG: ${{ vars.FRONT_TAG }}
        BACK_TAG: ${{ github.ref_name }}
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        password: ${{ secrets.PASSWORD }}
        port: ${{ secrets.PORT }}
        envs: DOMAIN,SENDER_API_KEY,FRONT_TAG,BACK_TAG
        script: |
          echo "FRONT:${FRONT_TAG} BACK:${BACK_TAG}"
          docker compose --file docker-compose/deploy/docker-compose.yml up --pull always -d --remove-orphans
